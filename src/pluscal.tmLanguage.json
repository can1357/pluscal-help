{
  "name": "PlusCal",
  "scopeName": "source.pluscal",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#labels" },
    { "include": "#keywords" },
    { "include": "#operators" },
    { "include": "#numbers" },
    { "include": "#functions" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.pluscal",
          "begin": "\\(\\*",
          "end": "\\*\\)",
          "captures": {
            "0": { "name": "punctuation.definition.comment.pluscal" }
          }
        },
        {
          "name": "comment.line.pluscal",
          "match": "\\\\\\*.*$",
          "captures": {
            "0": { "name": "punctuation.definition.comment.pluscal" }
          }
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.pluscal",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.pluscal",
          "match": "\\\\[\"\\\\tnfr]"
        }
      ]
    },
    "labels": {
      "name": "entity.name.label.pluscal",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s*:[+-]?",
      "captures": {
        "0": { "name": "entity.name.label.pluscal" }
      }
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.pluscal",
          "match": "\\b(algorithm|fair|process|procedure|macro|define|variables?|if|then|else|elsif|while|do|either|or|with|when|await|call|return|goto|assert|skip|print)\\b"
        },
        {
          "name": "keyword.other.tla",
          "match": "\\b(EXTENDS|INSTANCE|CONSTANT|CONSTANTS|VARIABLE|VARIABLES|ASSUME|THEOREM|CHOOSE|DOMAIN|ENABLED|UNCHANGED|SUBSET|UNION|LET|IN|CASE|OTHER)\\b"
        },
        {
          "name": "constant.language.pluscal",
          "match": "\\b(TRUE|FALSE|BOOLEAN)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.pluscal",
          "match": ":=|\\|\\|"
        },
        {
          "name": "keyword.operator.logical.pluscal",
          "match": "/\\\\|\\\\/|~|=>|<=>|¬|∧|∨|⇒|≡"
        },
        {
          "name": "keyword.operator.set.pluscal",
          "match": "\\\\in|\\\\cup|\\\\cap|\\\\subset|∈|∉|∪|∩|⊆|⊂"
        },
        {
          "name": "keyword.operator.comparison.pluscal",
          "match": "<=|>=|#|/=|≤|≥|≠|<|>|="
        },
        {
          "name": "keyword.operator.arithmetic.pluscal",
          "match": "\\+|\\-|\\*|/|%|\\^"
        },
        {
          "name": "keyword.operator.function.pluscal",
          "match": "\\|->|->|@@|:>"
        },
        {
          "name": "keyword.operator.temporal.pluscal",
          "match": "\\[\\]|<>|~>|WF_|SF_"
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.pluscal",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    "functions": {
      "name": "entity.name.function.pluscal",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*[\\(\\[])"
    }
  }
}
